{ //Telco Deployment with Redis Cache
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VnetAddressPrefix": {
      "type": "string",
      "defaultValue": "192.168.16.0/23"
    },
    "servicePrincipalClientId": {
      "type": "securestring",
      "metadata": {
        "description": "The Service Principal Client ID."
      }
    },
    "servicePrincipalClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The Service Principal Client Secret."
      }
    }
  },
  "variables": {
    "SeperatedValues": "[split(resourceGroup().name,'RG')]"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2018-01-01-preview",
      "name": "[replace(resourceGroup().name,'RG-AKS', 'EH')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-09-01",
      "name": "[concat(resourceGroup().name, '-NSG')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "web_rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat(replace(resourceGroup().name,'RG-AKS', 'EH'), '/RootManageSharedAccessKey')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', concat(replace(resourceGroup().name,'RG-AKS', 'EH')))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "name": "[concat(replace(resourceGroup().name,'RG-AKS', 'EH'), '/aggregator-1')]",
      "location": "Central India",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', concat(replace(resourceGroup().name,'RG-AKS', 'EH')))]"
      ],
      "properties": {
        "messageRetentionInDays": 3,
        "partitionCount": 32,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/networkRuleSets",
      "apiVersion": "2018-01-01-preview",
      "name": "[concat(replace(resourceGroup().name,'RG-AKS', 'EH'), '/default')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', concat(replace(resourceGroup().name,'RG-AKS', 'EH')))]"
      ],
      "properties": {
        "defaultAction": "Deny",
        "virtualNetworkRules": [],
        "ipRules": []
      }
    },
    {
      "name": "[concat(resourceGroup().name, '-Vnet')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(resourceGroup().name, '-NSG'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-09-01",
      "name": "[concat(resourceGroup().name,'-vnet/subnet1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', concat(resourceGroup().name, '-Vnet'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(resourceGroup().name, '-NSG'))]"
      ],
      "properties": {
        "addressPrefix": "[parameters('vnetAddressPrefix')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(resourceGroup().name, '-NSG'))]"
        },
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[replace(resourceGroup().name,'AKS', 'LAWKS')]",
      "apiVersion": "2017-03-15-preview",
      "location": "southeastasia",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2019-10-01",
      "name": "[replace(resourceGroup().name,'RG-', '')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', replace(resourceGroup().name,'AKS', 'LAWKS'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(resourceGroup().name, '-Vnet'), 'subnet1')]"
      ],
      "properties": {
        "kubernetesVersion": "1.15.7",
        "dnsPrefix": "[concat(resourceGroup().name, '-AKSClusterdns')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "count": 1,
            "vmSize": "Standard_DS4_v2",
            "osDiskSizeGB": 100,
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(resourceGroup().name, '-Vnet'), 'subnet1')]",
            "maxPods": 30,
            "enableAutoScaling": true,
            "minCount": 1,
            "maxCount": 12,
            "type": "VirtualMachineScaleSets",
            "orchestratorVersion": "1.15.7",
            "osType": "Linux"
          }
        ],
        "servicePrincipalProfile": {
          "clientId": "[parameters('servicePrincipalClientId')]",
          "secret": "[parameters('servicePrincipalClientSecret')]"
        },
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": true
          },
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', replace(resourceGroup().name,'AKS', 'LAWKS'))]"
            }
          }
        },
        "nodeResourceGroup": "[concat('MC_TBS-RG-SI-Entrp_', replace(resourceGroup().name,'RG-', ''), '_', resourceGroup().location )]",
        "enableRBAC": true,
        "networkProfile": {
          "networkPlugin": "azure",
          "loadBalancerSku": "standard",
          "loadBalancerProfile": {
            "managedOutboundIPs": {
              "count": 1
            }

          },
          "serviceCidr": "10.0.0.0/16",
          "dnsServiceIP": "10.0.0.10",
          "dockerBridgeCidr": "172.17.0.1/16",
          "outboundType": "loadBalancer"
        }
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters/agentPools",
      "apiVersion": "2019-10-01",
      "name": "[concat(replace(resourceGroup().name,'RG-', ''), '/agentpool')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', replace(resourceGroup().name,'RG-', ''))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(resourceGroup().name, '-Vnet'), 'subnet1')]"
      ],
      "properties": {
        "count": 1,
        "vmSize": "Standard_DS4_v2",
        "osDiskSizeGB": 100,
        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(resourceGroup().name, '-Vnet'), 'subnet1')]",
        "maxPods": 30,
        "type": "VirtualMachineScaleSets",
        "orchestratorVersion": "1.15.7",
        "osType": "Linux"
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "2019-07-01",
      "name": "[concat(replace(resourceGroup().name,'RG-AKS-', ''), '-RedisCache')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard",
          "family": "C",
          "capacity": 1
        },
        "enableNonSslPort": true,
        "redisConfiguration": {
          "maxclients": "1000",
          "maxmemory-reserved": "50",
          "maxfragmentationmemory-reserved": "50",
          "maxmemory-delta": "50"
        }
      }
    }
  ]

}
